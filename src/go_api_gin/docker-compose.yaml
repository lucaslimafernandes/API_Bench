version: '3'

services:

  db_pg:
    image: postgres:14-alpine
    restart: always
    volumes:
      - db_pg-data:/var/lib/postgresql/data
    shm_size: 128mb
    container_name: db_pg
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_PASSWORD: password
    networks:
      - backend

  
  go_gin1:
    build: .
    container_name: go_gin1
    depends_on:
      db_pg:
        condition: service_healthy
    environment:
      DB_URL: user=postgres password=password host=db_pg port=5432 dbname=postgres
      SECRET: secret-jwt
    networks:
      - backend

  go_gin2:
    build: .
    container_name: go_gin2
    depends_on:
      db_pg:
        condition: service_healthy
    environment:
      DB_URL: user=postgres password=password host=db_pg port=5432 dbname=postgres
      SECRET: secret-jwt
    networks:
      - backend


  flask1:
    build: ./flask
    container_name: flask1
    depends_on:
      db_pg:
        condition: service_healthy
    networks:
      - backend

  flask2:
    build: ./flask
    container_name: flask2
    depends_on:
      db_pg:
        condition: service_healthy
    networks:
      - backend


  nginx_test:
    image: nginx:alpine
    container_name: nginx_test
    depends_on:
      - go_gin1
      - go_gin2
      - flask1
      - flask2
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "8000:8000"
      - "9000:9000"
    networks:
      - backend

networks:
  backend:
    driver: bridge

volumes:
  db_pg-data: